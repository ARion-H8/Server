  type User {
    _id: String
    username: String
    password: String
    email: String
    token: String
    cart: [CartItem]
  }

  type CartItem {
    _id: String
    product: Product
    user: User
    quantity: Int
  }

  type Product {
    _id: String
    name: String
    price: Int
    image: String
    transactions: [Transaction]
    obj_name: String
    obj_url: String
    texture_url: String
  }

  type Transaction {
    _id: String
    userId: User
    productId: Product
    quantity: Int
  }

  type Query {
    user: User
    transactions: [Transaction]
    products: [Product]
  }

  type Mutation {
    signUp(newUser: newUser): User
    signIn(email: String, password: String): User
    addProduct(newProduct: newProduct): Product
    deleteProduct(productId: String): Product
    editProduct(productId: String, name: String, price: String, image: String): Product
    addTransaction(newTransaction: newTransaction): Transaction
    addCart(newCartItem: newCartItem): CartItem
    deleteCart(cartId: String): CartItem
    editCart(cartId: String, quantity: Int): CartItem
  }

  input newUser {
    username: String
    email: String
    password: String
  }

  input newProduct {
    name: String
    price: Int
    image: String
    obj_name: String
    obj_url: String
    texture_url: String
  }

  input newCartItem {
    product: String
    quantity: Int
  }

  input newTransaction {
    productId: String
    quantity: Int
  }
